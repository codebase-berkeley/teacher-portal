{"version":3,"sources":["components/Login/Login.jsx","components/Dashboard/AddClassBox/Item.jsx","components/Dashboard/AddClassModal.jsx","components/Dashboard/ClassBox/ClassBox.jsx","components/Logout/Logout.jsx","components/Dashboard/AddClassBox/AddClassBox.jsx","components/Dashboard/Dashboard.jsx","components/Survey/Star/Star.jsx","components/Survey/Survey.jsx","components/Units/Unitbox.jsx","components/Units/InputBox/InputBox.jsx","components/Units/Units.jsx","components/Histogram/Histogram.jsx","components/Lessons/LessonBox/LessonBox.jsx","components/Lessons/AddLessonBox/AddLessonBox.jsx","components/Lessons/Modal/AddLessonModal.jsx","components/Lessons/Lessons.jsx","components/LessonReflection/LessonReflection.jsx","App.jsx","registerServiceWorker.js","index.js","components/Lessons/AddLessonBox/plsImage.png","components/Dashboard/AddClassBox/plusImage.png","components/Login/ygnacio-valley-logo.jpg"],"names":["Login","react_default","a","createElement","className","src","Logo","alt","href","Component","Item","text","this","props","AddClassModal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","modalIsOpen","currEmailItem","currYearItem","items","openModal","bind","assertThisInitialized","afterOpenModal","closeModal","handleItem","handleYearItem","addItem","checkSubmit","checkYearEnter","submitInfo","checkRepeat","prevProps","showModal","setState","check","classList","repeated","i","length","class_name","alert","_this2","_this$state","fetch","method","headers","Content-Type","body","JSON","stringify","teacherID","emails","yearName","then","response","ok","Error","networkError","console","log","message","handleChangeState","event","target","value","_this$state2","indexOf","concat","split","e","charCode","_this$state3","same","valid","test","String","toLowerCase","preventDefault","document","getElementById","_this3","_this$state4","h1str","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","ariaHideApp","onKeyPress","placeholder","onChange","map","item","AddClassBox_Item","type","onClick","ClassBox","classModalType","deleteClass","classChangeModal","studentsChangeModal","saveClass","goToNextModal","handleShowModal","prevState","x","reRender","_this$props","title","encodeURIComponent","json","_this$props2","color","teacher","id","isTeacher","route","close","NavLink","to","Dashboard_AddClassModal","componentWillMount","Logout","AddClassBox","j","substring","htmlFor","default","unitName","buttonType","plus","Dashboard","displayClassBoxes","redirect","classRoute","classesJSON","query","is_teacher","boxArray","str","push","Dashboard_ClassBox_ClassBox","classid","key","first_name","last_name","components_Logout_Logout","Dashboard_AddClassBox_AddClassBox","Star","question","number","name","React","Survey","questions","displayQuestions","handleGoBack","unitID","match","params","history","goBack","qlist","forEach","q","Survey_Star_Star","action","Unitbox","path","InputBox","handleChange","handler","input","onKeyUp","keyCode","shiftKey","Units","unitList","unitModalType","questionInputs","inputText","createRef","sendData","create","unitChangeModal","generateInputBox","addNewQuestion","saveUnitName","handleQuestionInput","classID","redirected","units","unitsJSON","questionID","inputList","Units_InputBox_InputBox","current","jsonResponse","unit_name","idForUnit","questionInput","unitNames","unitBoxes","components_Units_Unitbox","onSubmit","ref","ReactChartkick","addAdapter","Chart","Histogram","columnCharts","rows","questionTable","charts","year","react_chartkick_esm","data","xtitle","ytitle","LessonBox","link","AddLessonBox","onKeyDown","role","tabIndex","customStyles","background","width","marginTop","paddingBottom","height","border","cursor","activeStyle","onDropRejected","AddLessonModal","onDrop","files","file","currfile","okClicked","handleEnterPress","handleCloseModal","updateLessons","lessonName","FormData","append","es","style","accept","multiple","inputProps","_ref","acceptedFiles","colors","Lessons","lessons","componentDidMount","handleOpenModal","lessonID","lesson_name","Lessons_AddLessonBox_AddLessonBox","less","Lessons_LessonBox_LessonBox","Math","floor","random","overlayClassName","Lessons_Modal_AddLessonModal","LessonReflection","handleEditorChange","teachNotes","getContent","saveText","notes","url","parseInt","es2015","initialValue","init","plugins","toolbar","save_onsavecallback","defaultProps","hst","createBrowserHistory","App","Router","Switch","Route","exact","component","Summary","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0d77354b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Logo from './ygnacio-valley-logo.jpg';\nimport './Login.css';\n\nclass Login extends Component {\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div>\n          <img src={Logo} alt=\"logo\" className=\"logo\" />\n          <h1 className=\"welcome\">Welcome!</h1>\n          <div className=\"welcome-sub\">Get started here.</div>\n          <div className=\"button-wrapper\">\n            <a href=\"/auth/google/teacherStatus/0\" className=\"signin\">\n              Sign in as Student\n            </a>\n            <a href=\"/auth/google/teacherStatus/1\" className=\"signin\">\n              Sign in as Teacher\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Item extends Component {\n  static propTypes = {\n    text: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { text } = this.props;\n    return <li>{text}</li>;\n  }\n}\n\nexport default Item;\n","/* eslint-disable react/no-did-update-set-state */\n\nimport React, { Component } from 'react';\nimport './AddClassBox/AddClassBox.css';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport Item from './AddClassBox/Item';\n\nconst enterKey = 13;\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nclass AddClassModal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n      currEmailItem: '',\n      currYearItem: '',\n      items: []\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleItem = this.handleItem.bind(this);\n    this.handleYearItem = this.handleYearItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.checkSubmit = this.checkSubmit.bind(this);\n    this.checkYearEnter = this.checkYearEnter.bind(this);\n    this.submitInfo = this.submitInfo.bind(this);\n    this.checkRepeat = this.checkRepeat.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { showModal } = this.props;\n    if (showModal !== prevProps.showModal) {\n      this.setState({ modalIsOpen: showModal });\n    }\n  }\n\n  checkRepeat(check) {\n    const { classList } = this.props;\n    let repeated = false;\n    for (let i = 0; i < classList.length; i += 1) {\n      if (classList[i].class_name === check) {\n        repeated = true;\n      }\n    }\n    if (repeated) {\n      alert('This name has already been used.');\n    } else if (check === '') {\n      alert('Please enter a class name.');\n    }\n  }\n\n  submitInfo() {\n    const { items, currYearItem } = this.state;\n    const { className } = this.props;\n\n    fetch('/api/classes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        className,\n        teacherID: 1,\n        emails: items,\n        yearName: currYearItem\n      })\n    }).then(\n      response => {\n        if (response.ok) {\n          this.setState({ items: [], modalIsOpen: false });\n          this.closeModal();\n          return response;\n        }\n        throw new Error('Request failed!');\n      },\n      networkError => console.log(networkError.message)\n    );\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    const { handleChangeState } = this.props;\n    this.setState({ modalIsOpen: false, items: [] });\n    handleChangeState(); // changes the state in parent component\n  }\n\n  handleItem(event) {\n    this.setState({\n      currEmailItem: event.target.value\n    });\n  }\n\n  handleYearItem(event) {\n    this.setState({\n      currYearItem: event.target.value\n    });\n  }\n\n  addItem() {\n    const { currEmailItem, items } = this.state;\n    if (currEmailItem !== '') {\n      this.setState({\n        currEmailItem: ''\n      });\n      if (currEmailItem.indexOf(',') !== 0) {\n        this.setState({\n          items: items.concat(currEmailItem.split(','))\n        });\n      } else {\n        this.setState({\n          items: items.concat(currEmailItem)\n        });\n      }\n    }\n  }\n\n  checkYearEnter(e) {\n    const { currYearItem } = this.state;\n    if (e && e.charCode === enterKey) {\n      if (currYearItem === '') {\n        alert('Please enter a year');\n      }\n    }\n  }\n\n  checkSubmit(e) {\n    const { currEmailItem, items } = this.state;\n    let same = true;\n\n    for (let i = 0; i < items.length; i += 1) {\n      if (currEmailItem === items[i]) {\n        same = false;\n      }\n    }\n\n    if (e && e.charCode === enterKey) {\n      const valid = validateEmail(currEmailItem);\n      if (valid && same) {\n        this.addItem();\n      } else if (!valid) {\n        alert('Not a valid email address.');\n        if (currEmailItem !== '') {\n          this.setState({\n            currEmailItem: ''\n          });\n        }\n      } else if (!same) {\n        alert('This email address has already been added.');\n        if (currEmailItem !== '') {\n          this.setState({\n            currEmailItem: ''\n          });\n        }\n      }\n    }\n  }\n\n  goToNextModal(event) {\n    if (event.charCode === enterKey) {\n      event.preventDefault();\n      this.checkRepeat(document.getElementById('classNameText'));\n    }\n  }\n\n  render() {\n    const { currEmailItem, currYearItem, items } = this.state;\n    const { className } = this.props;\n    const { modalIsOpen } = this.state;\n\n    const h1str = `Add Students to ${className}`;\n    return (\n      <Modal\n        className=\"student-modal\"\n        isOpen={modalIsOpen}\n        onAfterOpen={this.afterOpenModal}\n        onRequestClose={this.closeModal}\n        contentLabel=\"Example Modal\"\n        ariaHideApp={false}\n      >\n        <h1 className=\"student-modalTitle\">{h1str}</h1>\n        <div className=\"todo-container\">\n          <div className=\"input-container\">\n            <input\n              onKeyPress={this.checkSubmit}\n              className=\"inputText\"\n              placeholder=\"ie. johndoe@gmail.com\"\n              value={currEmailItem}\n              onChange={this.handleItem}\n            />\n          </div>\n\n          <ul className=\"display\">\n            {items.map(item => (\n              <Item text={item} />\n            ))}\n          </ul>\n\n          <h3 className=\"forclassyear\">For class year: </h3>\n\n          <div className=\"input-container\">\n            <input\n              onKeyPress={this.checkYearEnter}\n              className=\"inputTextYear\"\n              placeholder=\"ie. 2018-2019\"\n              value={currYearItem}\n              onChange={this.handleYearItem}\n            />\n          </div>\n\n          <div className=\"button-wrapper\">\n            <button\n              className=\"cancel-student\"\n              type=\"button\"\n              onClick={this.closeModal}\n            >\n              Cancel\n            </button>\n            <button\n              className=\"cancel-student marginFix\"\n              type=\"button\"\n              onClick={() => {\n                if (currYearItem === '') {\n                  alert('Please enter a year');\n                } else if (items.length > 0) {\n                  this.submitInfo();\n                } else {\n                  alert(\n                    'Please add student emails in order to create a class.'\n                  );\n                }\n              }}\n            >\n              OK\n            </button>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nAddClassModal.propTypes = {\n  className: PropTypes.string.isRequired,\n  classList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  showModal: PropTypes.bool.isRequired,\n  handleChangeState: PropTypes.func.isRequired\n};\nexport default AddClassModal;\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport './ClassBox.css';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport AddClassModal from '../AddClassModal';\n\nconst enterKey = 13;\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nclass ClassBox extends Component {\n  static propTypes = {\n    reRender: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    teacher: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n      currEmailItem: '',\n      currYearItem: '',\n      items: [],\n      classModalType: true,\n      className: '',\n      showModal: false\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.deleteClass = this.deleteClass.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleItem = this.handleItem.bind(this);\n    this.handleYearItem = this.handleYearItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.checkSubmit = this.checkSubmit.bind(this);\n    this.checkYearEnter = this.checkYearEnter.bind(this);\n    this.classChangeModal = this.classChangeModal.bind(this);\n    this.studentsChangeModal = this.studentsChangeModal.bind(this);\n    this.saveClass = this.saveClass.bind(this);\n    this.submitInfo = this.submitInfo.bind(this);\n    this.checkRepeat = this.checkRepeat.bind(this);\n    this.goToNextModal = this.goToNextModal.bind(this);\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.handleChangeState = this.handleChangeState.bind(this);\n  }\n\n  checkRepeat(check) {\n    const { classList } = this.props;\n    let repeated = false;\n    for (let i = 0; i < classList.length; i += 1) {\n      if (classList[i].class_name === check) {\n        repeated = true;\n      }\n    }\n    if (repeated) {\n      alert('This name has already been used.');\n    } else if (check === '') {\n      alert('Please enter a class name.');\n    } else {\n      this.classChangeModal();\n    }\n    this.saveClass();\n  }\n\n  classChangeModal() {\n    this.setState(prevState => ({\n      classModalType: !prevState.classModalType\n    }));\n  }\n\n  studentsChangeModal() {\n    this.setState(prevState => ({\n      classModalType: !prevState.classModalType,\n      modalIsOpen: !prevState.modalIsOpen\n    }));\n  }\n\n  saveClass() {\n    const x = document.getElementById('classNameText').value;\n    this.setState({ className: x });\n  }\n\n  submitInfo() {\n    const { className, items, currYearItem } = this.state;\n    const { reRender } = this.props;\n    fetch('/api/classes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        className,\n        teacherID: 1,\n        emails: items,\n        yearName: currYearItem\n      })\n    }).then(\n      response => {\n        if (response.ok) {\n          reRender();\n          this.setState({ items: [] });\n          return response;\n        }\n        throw new Error('Request failed!');\n      },\n      networkError => console.log(networkError.message)\n    );\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  deleteClass() {\n    const { title, reRender } = this.props;\n    fetch(`/api/deleteClass/${encodeURIComponent(title)}`, {\n      method: 'delete'\n    }).then(response => {\n      if (response.ok) {\n        reRender();\n        return response.json();\n      }\n      throw new Error('Request Failed');\n    });\n  }\n\n  handleItem(event) {\n    this.setState({\n      currEmailItem: event.target.value\n    });\n  }\n\n  handleYearItem(event) {\n    this.setState({\n      currYearItem: event.target.value\n    });\n  }\n\n  addItem() {\n    const { currEmailItem, items } = this.state;\n    if (currEmailItem !== '') {\n      this.setState({\n        currEmailItem: ''\n      });\n      if (currEmailItem.indexOf(',') !== 0) {\n        this.setState({\n          items: items.concat(currEmailItem.split(','))\n        });\n      } else {\n        this.setState({\n          items: items.concat(currEmailItem)\n        });\n      }\n    }\n  }\n\n  checkYearEnter(e) {\n    const { currYearItem } = this.state;\n    if (e && e.charCode === enterKey) {\n      if (currYearItem === '') {\n        alert('Please enter a year');\n      }\n    }\n  }\n\n  checkSubmit(e) {\n    const { currEmailItem, items } = this.state;\n    let same = true;\n\n    for (let i = 0; i < items.length; i += 1) {\n      if (currEmailItem === items[i]) {\n        same = false;\n      }\n    }\n\n    if (e && e.charCode === enterKey) {\n      const valid = validateEmail(currEmailItem);\n      if (valid && same) {\n        this.addItem();\n      } else if (!valid) {\n        alert('Not a valid email address.');\n        if (currEmailItem !== '') {\n          this.setState({\n            currEmailItem: ''\n          });\n        }\n      } else if (!same) {\n        alert('This email address has already been added.');\n        if (currEmailItem !== '') {\n          this.setState({\n            currEmailItem: ''\n          });\n        }\n      }\n    }\n  }\n\n  goToNextModal(event) {\n    if (event.charCode === enterKey) {\n      event.preventDefault();\n      this.checkRepeat(document.getElementById('classNameText'));\n    }\n  }\n\n  handleShowModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleChangeState() {\n    const { showModal } = this.state;\n    this.setState({ showModal: !showModal });\n  }\n\n  render() {\n    const { color, title, teacher, id, isTeacher } = this.props;\n    const { showModal, modalIsOpen } = this.state;\n    const route = `/units/${id}`;\n\n    return (\n      <div className=\"class-container\">\n        <div className=\"confirmation\">\n          <Modal\n            className=\"confirm-pop-up\"\n            isOpen={modalIsOpen}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            contentLabel=\"Example Modal\"\n          >\n            <h1 className=\"confirm-message\">\n              Are you sure you want to delete this class?\n            </h1>\n            <h5 className=\"sub-message\">\n              Deleting this class will delete all information associated with\n              it.\n            </h5>\n            <div className=\"button-wrapper\">\n              <button\n                type=\"submit\"\n                className=\"cancel\"\n                onClick={this.closeModal}\n                close\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"cancel marginFix\"\n                onClick={this.deleteClass}\n              >\n                Delete\n              </button>\n            </div>\n          </Modal>\n        </div>\n\n        {isTeacher ? (\n          <button\n            type=\"button\"\n            className=\"add-new-students\"\n            onClick={this.handleShowModal}\n          >\n            +&nbsp;&nbsp;Add New Students\n          </button>\n        ) : null}\n\n        {isTeacher ? (\n          <button className=\"class-exit\" type=\"button\" onClick={this.openModal}>\n            &#10006;\n          </button>\n        ) : null}\n\n        <NavLink className=\"classbox\" to={route}>\n          <div className={color} />\n          <p className=\"title-p\">{title}</p>\n          <p className=\"teacher-p\">{teacher}</p>\n        </NavLink>\n        {isTeacher ? (\n          <AddClassModal\n            showModal={showModal}\n            reRender={this.componentWillMount}\n            className={title}\n            handleChangeState={this.handleChangeState}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nClassBox.propTypes = {\n  reRender: PropTypes.func.isRequired,\n  classList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isTeacher: PropTypes.bool.isRequired\n};\n\nexport default ClassBox;\n","import React from 'react';\nimport './Logout.css';\n\nfunction Logout() {\n  return (\n    <a href=\"/auth/logout/\" className=\"logout\">\n      Logout\n    </a>\n  );\n}\n\nexport default Logout;\n","import React, { Component } from 'react';\nimport './AddClassBox.css';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport Item from './Item';\n\nimport plus from './plusImage.png';\n\nconst enterKey = 13;\n\nclass AddClassBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false,\n      currEmailItem: '',\n      currYearItem: '',\n      items: [],\n      classModalType: true,\n      className: ''\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleItem = this.handleItem.bind(this);\n    this.handleYearItem = this.handleYearItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.checkSubmit = this.checkSubmit.bind(this);\n    this.checkYearEnter = this.checkYearEnter.bind(this);\n    this.classChangeModal = this.classChangeModal.bind(this);\n    this.studentsChangeModal = this.studentsChangeModal.bind(this);\n    this.saveClass = this.saveClass.bind(this);\n    this.submitInfo = this.submitInfo.bind(this);\n    this.checkRepeat = this.checkRepeat.bind(this);\n    this.goToNextModal = this.goToNextModal.bind(this);\n  }\n\n  checkRepeat(check) {\n    const { classList } = this.props;\n    let repeated = false;\n    for (let i = 0; i < classList.length; i += 1) {\n      if (classList[i].class_name === check) {\n        repeated = true;\n      }\n    }\n    if (repeated) {\n      alert('This name has already been used.');\n    } else if (check === '') {\n      alert('Please enter a class name.');\n    } else {\n      this.classChangeModal();\n    }\n    this.saveClass();\n  }\n\n  classChangeModal() {\n    this.setState(prevState => ({\n      classModalType: !prevState.classModalType\n    }));\n  }\n\n  studentsChangeModal() {\n    this.setState(prevState => ({\n      classModalType: !prevState.classModalType,\n      modalIsOpen: !prevState.modalIsOpen\n    }));\n  }\n\n  saveClass() {\n    const x = document.getElementById('classNameText').value;\n    this.setState({ className: x });\n  }\n\n  submitInfo() {\n    const { className, items, currYearItem } = this.state;\n    const { reRender } = this.props;\n\n    fetch('/api/classes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        className,\n        teacherID: 1,\n        emails: items,\n        yearName: currYearItem\n      })\n    }).then(\n      response => {\n        if (response.ok) {\n          reRender();\n          this.setState({ items: [] });\n          return response;\n        }\n        throw new Error('Request failed!');\n      },\n      networkError => console.log(networkError.message)\n    );\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  handleItem(event) {\n    this.setState({\n      currEmailItem: event.target.value\n    });\n  }\n\n  handleYearItem(event) {\n    this.setState({\n      currYearItem: event.target.value\n    });\n  }\n\n  addItem() {\n    const { currEmailItem, items } = this.state;\n    if (currEmailItem !== '') {\n      this.setState({\n        currEmailItem: ''\n      });\n      if (currEmailItem.indexOf(',') !== 0) {\n        this.setState({\n          items: items.concat(currEmailItem.split(','))\n        });\n      } else {\n        this.setState({\n          items: items.concat(currEmailItem)\n        });\n      }\n    }\n  }\n\n  checkYearEnter(e) {\n    const { currYearItem } = this.state;\n    if (e && e.charCode === enterKey) {\n      if (currYearItem === '') {\n        alert('Please enter a year');\n      }\n    }\n  }\n\n  checkSubmit(e) {\n    const { currEmailItem, items } = this.state;\n    let same = true;\n    let valid = false;\n\n    for (let i = 0; i < items.length; i += 1) {\n      if (currEmailItem === items[i]) {\n        same = false;\n      }\n    }\n\n    for (let j = 0; j < currEmailItem.length; j += 1) {\n      if (currEmailItem.substring(j, j + 1) === '@') {\n        valid = true;\n      }\n    }\n\n    if (e && e.charCode === enterKey) {\n      if (valid && same) {\n        this.addItem();\n      } else if (!valid) {\n        alert('Not a valid email address.');\n        if (currEmailItem !== '') {\n          this.setState({\n            currEmailItem: ''\n          });\n        }\n      } else if (!same) {\n        alert('This email address has already been added.');\n        if (currEmailItem !== '') {\n          this.setState({\n            currEmailItem: ''\n          });\n        }\n      }\n    }\n  }\n\n  goToNextModal(event) {\n    if (event.charCode === enterKey) {\n      event.preventDefault();\n      this.checkRepeat(document.getElementById('classNameText'));\n    }\n  }\n\n  render() {\n    const {\n      modalIsOpen,\n      currEmailItem,\n      currYearItem,\n      items,\n      classModalType,\n      className\n    } = this.state;\n\n    if (classModalType) {\n      return (\n        <div className=\"classbox\">\n          <div className=\"grey-top\">\n            <Modal\n              className=\"class-modal\"\n              isOpen={modalIsOpen}\n              onAfterOpen={this.afterOpenModal}\n              onRequestClose={this.closeModal}\n              contentLabel=\"Example Modal\"\n            >\n              <div className=\"class-modalTitle\">Add New Class</div>\n              <form>\n                <label htmlFor=\"className\">Class Name</label>\n                <input\n                  className=\"inputText\"\n                  type=\"text\"\n                  onKeyPress={this.goToNextModal}\n                  id=\"classNameText\"\n                  default={className}\n                />\n              </form>\n              <div className=\"button-wrapper\">\n                <button\n                  type=\"submit\"\n                  className=\"cancel-class\"\n                  onClick={this.closeModal}\n                  close\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"cancel-class marginFix\"\n                  onKeyPress={this.goToNextModal}\n                  onClick={() => {\n                    const check = document.getElementById('classNameText')\n                      .value;\n                    this.checkRepeat(check);\n                  }}\n                  close\n                >\n                  Next\n                </button>\n              </div>\n            </Modal>\n          </div>\n          <button\n            className=\"add-new-class\"\n            type=\"submit\"\n            onClick={this.openModal}\n            unitName=\"+ Add New Unit\"\n            buttonType=\"add\"\n          >\n            <img src={plus} alt=\"plus\" className=\"plus\" />\n            <div className=\"new-class-text\">Add New Class</div>\n          </button>\n        </div>\n      );\n    }\n    return (\n      <div className=\"classbox\">\n        <div className=\"grey-top\">\n          <Modal\n            className=\"student-modal\"\n            isOpen={modalIsOpen}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            contentLabel=\"Example Modal\"\n            ariaHideApp={false}\n          >\n            <h1 className=\"student-modalTitle\">Add Students</h1>\n            <div className=\"todo-container\">\n              <div className=\"input-container\">\n                <input\n                  onKeyPress={this.checkSubmit}\n                  className=\"inputText\"\n                  placeholder=\"ie. johndoe@gmail.com\"\n                  value={currEmailItem}\n                  onChange={this.handleItem}\n                />\n              </div>\n\n              <ul className=\"display\">\n                {items.map(item => (\n                  <Item text={item} />\n                ))}\n              </ul>\n\n              <h3 className=\"forclassyear\">For class year: </h3>\n\n              <div className=\"input-container\">\n                <input\n                  onKeyPress={this.checkYearEnter}\n                  className=\"inputTextYear\"\n                  placeholder=\"ie. 2018-2019\"\n                  value={currYearItem}\n                  onChange={this.handleYearItem}\n                />\n              </div>\n\n              <div className=\"button-wrapper\">\n                <button\n                  className=\"cancel-student\"\n                  type=\"button\"\n                  onClick={this.classChangeModal}\n                >\n                  Back\n                </button>\n                <button\n                  className=\"cancel-student marginFix\"\n                  type=\"button\"\n                  onClick={() => {\n                    if (currYearItem === '') {\n                      alert('Please enter a year');\n                    } else if (items.length > 0) {\n                      this.studentsChangeModal();\n                      this.submitInfo();\n                      this.setState({ currYearItem: '' });\n                    } else {\n                      alert(\n                        'Please add student emails in order to create a class.'\n                      );\n                    }\n                  }}\n                >\n                  OK\n                </button>\n              </div>\n            </div>\n          </Modal>\n        </div>\n        <button\n          className=\"add-new-class\"\n          type=\"submit\"\n          onClick={this.openModal}\n          unitName=\"+ Add New Unit\"\n          buttonType=\"add\"\n        >\n          <img src={plus} alt=\"plus\" className=\"plus\" />\n          <div className=\"new-class-text\">Add New Class</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nAddClassBox.propTypes = {\n  reRender: PropTypes.func.isRequired,\n  classList: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default AddClassBox;\n","import React, { Component } from 'react';\nimport ClassBox from './ClassBox/ClassBox';\nimport Logout from '../Logout/Logout';\nimport AddClassBox from './AddClassBox/AddClassBox';\nimport './Dashboard.css';\n\nconst topBar = 'top-bar';\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      classList: [],\n      isTeacher: false\n    };\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.displayClassBoxes = this.displayClassBoxes.bind(this);\n  }\n\n  async componentWillMount() {\n    const classRoute = await fetch('/api/classes', { redirect: 'follow' });\n    if (classRoute.ok) {\n      const classesJSON = await classRoute.json();\n      this.setState({\n        classList: classesJSON.query,\n        isTeacher: classesJSON.is_teacher\n      });\n    }\n    return classRoute;\n  }\n\n  displayClassBoxes(classList, isTeacher) {\n    const boxArray = [];\n    for (let i = 0; i < classList.length; i += 1) {\n      const str = `${classList[i].color} ${topBar}`;\n      boxArray.push(\n        <ClassBox\n          reRender={this.componentWillMount}\n          title={classList[i].class_name}\n          id={classList[i].classid}\n          key={classList[i].classid}\n          teacher={`${classList[i].first_name} ${classList[i].last_name}`}\n          color={str}\n          isTeacher={isTeacher}\n        />\n      );\n    }\n    return boxArray;\n  }\n\n  render() {\n    const { classList, isTeacher } = this.state;\n    return (\n      <div className=\"dashboard-container\">\n        <Logout />\n        <p className=\"my-classes\">My Classes</p>\n        <div className=\"boxes-container\">\n          {isTeacher ? (\n            <AddClassBox\n              reRender={this.componentWillMount}\n              classList={classList}\n            />\n          ) : null}\n\n          {this.displayClassBoxes(classList, isTeacher)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './Star.css';\nimport PropTypes from 'prop-types';\n\nclass Star extends React.Component {\n  render() {\n    const { question, number } = this.props;\n    return (\n      <div className=\"question\">\n        <h1 className=\"question-text\">{question}</h1>\n\n        <div className=\"stars\">\n          <div className=\"star\">\n            <input\n              className=\"form-radio\"\n              type=\"radio\"\n              id=\"rating-5\"\n              name={number}\n              value=\"5\"\n            />\n            <label className=\"rating\" htmlFor=\"rating-5\">\n              5\n            </label>\n          </div>\n          <div className=\"star\">\n            <input\n              className=\"form-radio\"\n              type=\"radio\"\n              id=\"rating-4\"\n              name={number}\n              value=\"4\"\n            />\n            <label className=\"rating\" htmlFor=\"rating-4\">\n              4\n            </label>\n          </div>\n          <div className=\"star\">\n            <input\n              className=\"form-radio\"\n              type=\"radio\"\n              id=\"rating-3\"\n              name={number}\n              value=\"3\"\n            />\n            <label className=\"rating\" htmlFor=\"rating-3\">\n              3\n            </label>\n          </div>\n          <div className=\"star\">\n            <input\n              className=\"form-radio\"\n              type=\"radio\"\n              id=\"rating-2\"\n              name={number}\n              value=\"2\"\n            />\n            <label className=\"rating\" htmlFor=\"rating-2\">\n              2\n            </label>\n          </div>\n          <div className=\"star\">\n            <input\n              className=\"form-radio\"\n              type=\"radio\"\n              id=\"rating-1\"\n              name={number}\n              value=\"1\"\n            />\n            <label className=\"rating\" htmlFor=\"rating-1\">\n              1\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nStar.propTypes = {\n  question: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired\n};\n\nexport default Star;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Survey.css';\nimport Star from './Star/Star';\n\nclass Survey extends Component {\n  static propTypes = {\n    match: PropTypes.string.isRequired,\n    history: PropTypes.string.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      questions: []\n    };\n    this.displayQuestions = this.displayQuestions.bind(this);\n    this.handleGoBack = this.handleGoBack.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { unitID } = match.params;\n    fetch(`/api/questions/${unitID}`)\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          questions: response\n        });\n      });\n  }\n\n  handleGoBack() {\n    const { history } = this.props;\n    history.goBack();\n  }\n\n  displayQuestions() {\n    const { questions } = this.state;\n    const qlist = [];\n    questions.forEach(q => {\n      qlist.push(\n        <div className=\"star-container\">\n          <Star number={q.id} question={q.text} />\n        </div>\n      );\n    });\n    return qlist;\n  }\n\n  render() {\n    const { match } = this.props;\n    const { unitID } = match.params;\n    const route = `/api/survey`;\n    return (\n      <section className=\"Survey\">\n        <div className=\"back-container\">\n          <button\n            type=\"button\"\n            className=\"ReturnArrow moveRight\"\n            onClick={this.handleGoBack}\n          >\n            &#8592; Return to Units\n          </button>\n        </div>\n        <form method=\"POST\" action={route} className=\"Questions\">\n          {this.displayQuestions()}\n          <input type=\"hidden\" name=\"unitID\" value={unitID} />\n          <button className=\"submit-button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Survey;\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Unitbox.css';\n\nclass Unitbox extends Component {\n  static propTypes = {\n    reRender: PropTypes.func.isRequired,\n    unitName: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isTeacher: PropTypes.bool.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.deleteClass = this.deleteClass.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  deleteClass() {\n    const { unitName, reRender } = this.props;\n    fetch(`/api/deleteUnit/${encodeURIComponent(unitName)}`, {\n      method: 'delete'\n    }).then(response => {\n      if (response.ok) {\n        reRender();\n        return response.json();\n      }\n      throw new Error('Request Failed');\n    });\n  }\n\n  render() {\n    const { unitName, path, id, isTeacher } = this.props;\n    const { modalIsOpen } = this.state;\n    const route = `${path}/${id}`;\n\n    return (\n      <div className=\"bars\">\n        <div className=\"box\">\n          <div className=\"confirmation\">\n            <Modal\n              className=\"confirm-pop-up\"\n              isOpen={modalIsOpen}\n              onAfterOpen={this.afterOpenModal}\n              onRequestClose={this.closeModal}\n              contentLabel=\"Example Modal\"\n            >\n              <h1 className=\"confirm-message\">\n                Are you sure you want to delete this unit?\n              </h1>\n              <h5 className=\"sub-message\">\n                Deleting this unit will delete all information associated with\n                it.\n              </h5>\n              <div className=\"button-wrapper\">\n                <button\n                  type=\"submit\"\n                  className=\"cancel\"\n                  onClick={this.closeModal}\n                  close\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"cancel marginFix\"\n                  onClick={this.deleteClass}\n                >\n                  Delete\n                </button>\n              </div>\n            </Modal>\n          </div>\n        </div>\n        {isTeacher ? (\n          <button className=\"unit-exit\" type=\"button\" onClick={this.openModal}>\n            &#10006;\n          </button>\n        ) : null}\n\n        <NavLink to={route} className=\"unitbox\">\n          <div>{unitName}</div>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default Unitbox;\n","import React, { Component } from 'react';\nimport './InputBox.css';\nimport PropTypes from 'prop-types';\n\nclass InputBox extends Component {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    input: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { handler, id } = this.props;\n    handler(id, event.target.value);\n  }\n\n  render() {\n    const { id, input } = this.props;\n    return (\n      <div className=\"unitQuestions\">\n        <label htmlFor=\"QuestionOne\">{`Question ${id}`}</label>\n        <input\n          type=\"text\"\n          id=\"inputText\"\n          className=\"inputText\"\n          onChange={this.handleChange}\n          onKeyUp={e => {\n            if (e.keyCode === 13 && e.shiftKey === false) {\n              e.preventDefault();\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputBox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport Logout from '../Logout/Logout';\nimport Unitbox from './Unitbox';\nimport './Units.css';\nimport InputBox from './InputBox/InputBox';\n\nclass Units extends Component {\n  static propTypes = {\n    match: PropTypes.string.isRequired,\n    history: PropTypes.string.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      unitList: [],\n      unitModalType: true,\n      unitName: '',\n      isTeacher: false,\n      unitID: 0,\n      questionInputs: {}\n    };\n    this.inputText = React.createRef();\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.sendData = this.sendData.bind(this);\n    this.create = this.create.bind(this);\n    this.handleGoBack = this.handleGoBack.bind(this);\n    this.unitChangeModal = this.unitChangeModal.bind(this);\n    this.generateInputBox = this.generateInputBox.bind(this);\n    this.addNewQuestion = this.addNewQuestion.bind(this);\n    this.saveUnitName = this.saveUnitName.bind(this);\n    this.handleQuestionInput = this.handleQuestionInput.bind(this);\n    this.componentWillMount = this.componentWillMount.bind(this);\n  }\n\n  async componentWillMount() {\n    const { match } = this.props;\n    const { classID } = match.params;\n    const units = await fetch(`/api/units/${classID}`, {\n      redirected: 'follow'\n    });\n\n    if (units.ok) {\n      const unitsJSON = await units.json();\n      this.setState({\n        unitList: unitsJSON.query,\n        isTeacher: unitsJSON.is_teacher\n      });\n    }\n  }\n\n  handleQuestionInput(questionID, input) {\n    const { questionInputs } = this.state;\n    questionInputs[questionID] = input;\n    this.setState({\n      questionInputs\n    });\n  }\n\n  generateInputBox(questions) {\n    this.inputList = [];\n    for (let i = 0; i < questions.length; i += 1) {\n      this.inputList.push(questions[i]);\n    }\n    return this.inputList;\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n      unitModalType: true,\n      questions: [],\n      questionInputs: {},\n      unitName: ''\n    });\n  }\n\n  addNewQuestion() {\n    const { questions } = this.state;\n    const questionID = questions.length + 1;\n    this.setState({\n      questions: questions.concat(\n        <InputBox id={questionID} handler={this.handleQuestionInput} />\n      )\n    });\n  }\n\n  saveUnitName() {\n    const { unitName } = this.state;\n    this.setState({\n      unitName: unitName + this.inputText.current.value\n    });\n    if (this.inputText.current.value === '') {\n      alert('Please enter a unit name.');\n    }\n  }\n\n  async sendData() {\n    const { match } = this.props;\n    const { classID } = match.params;\n    const { unitList, unitName, questionInputs, questions } = this.state;\n    await fetch('/api/units', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ classID, unitName })\n    })\n      .then(\n        response => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Request failed!');\n        },\n        networkError => console.log(networkError.message)\n      )\n      .then(jsonResponse => {\n        const { id } = jsonResponse;\n        this.setState({\n          unitID: id,\n          unitList: unitList.concat({\n            classID,\n            id,\n            unit_name: unitName\n          })\n        });\n      });\n    const { unitID: idForUnit } = this.state;\n    for (let i = 1; i < questions.length + 1; i += 1) {\n      const questionInput = questionInputs[i];\n      fetch('/api/questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ idForUnit, questionInput })\n      }).then(\n        response => {\n          if (response.ok) {\n            return;\n          }\n          throw new Error('Request failed!');\n        },\n        networkError => console.log(networkError.message)\n      );\n    }\n    this.setState({ questions: [], questionInputs: {} });\n  }\n\n  unitChangeModal() {\n    this.setState(prevState => ({\n      unitModalType: !prevState.unitModalType\n    }));\n  }\n\n  create(unitNames, isTeacher) {\n    this.unitBoxes = [];\n    for (let i = 0; i < unitNames.length; i += 1) {\n      this.unitBoxes.push(\n        <Unitbox\n          unitName={unitNames[i].unit_name}\n          key={unitNames[i].id}\n          id={unitNames[i].id}\n          path={isTeacher ? '/lessons' : '/survey'}\n          reRender={this.componentWillMount}\n          isTeacher={isTeacher}\n        />\n      );\n    }\n    return this.unitBoxes;\n  }\n\n  handleGoBack() {\n    const { history } = this.props;\n    history.goBack();\n  }\n\n  render() {\n    const {\n      unitList,\n      modalIsOpen,\n      unitModalType,\n      questions,\n      unitName,\n      isTeacher\n    } = this.state;\n    if (unitModalType) {\n      return (\n        <div className=\"Page-layout\">\n          <Logout />\n          <button\n            type=\"button\"\n            className=\"ReturnArrow shiftRight\"\n            onClick={this.handleGoBack}\n          >\n            &#8592; Return to Classes\n          </button>\n          <div className=\"Unit-body\">\n            <h2 className=\"Unit-header\">My Units</h2>\n            <div className=\"Unit-boxes\">\n              {isTeacher ? (\n                <button\n                  className=\"addButton\"\n                  type=\"submit\"\n                  onClick={this.openModal}\n                  unitName=\"+ Add New Unit\"\n                  buttonType=\"add\"\n                >\n                  +&nbsp;&nbsp;Add New Unit\n                </button>\n              ) : null}\n\n              {this.create(unitList, isTeacher)}\n              <Modal\n                className=\"newUnitModal\"\n                isOpen={modalIsOpen}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n              >\n                <div className=\"modalTitle\">Add New Unit</div>\n                <form\n                  onSubmit={e => {\n                    e.preventDefault();\n                  }}\n                >\n                  <label htmlFor=\"unitname\" id=\"unitname\">\n                    Unit Name\n                  </label>\n                  <input\n                    className=\"inputText\"\n                    ref={this.inputText}\n                    type=\"text\"\n                    onKeyUp={e => {\n                      if (e.keyCode === 13 && e.shiftKey === false) {\n                        e.preventDefault();\n                        this.saveUnitName(unitName);\n                        this.unitChangeModal();\n                      }\n                    }}\n                  />\n                </form>\n                <div className=\"buttonwrapper\">\n                  <button\n                    type=\"button\"\n                    className=\"cancelButton\"\n                    onClick={this.closeModal}\n                    close\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"button\"\n                    id=\"next\"\n                    className=\"cancelButton\"\n                    onClick={() => {\n                      this.saveUnitName(unitName);\n                      this.unitChangeModal();\n                    }}\n                  >\n                    Next\n                  </button>\n                </div>\n              </Modal>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"Page-layout\">\n        <Logout />\n        <button\n          type=\"button\"\n          className=\"ReturnArrow shiftRight\"\n          onClick={this.handleGoBack}\n        >\n          &#8592; Return to Classes\n        </button>\n        <h2 className=\"Unit-header\">My Units</h2>\n        <div>\n          <button\n            className=\"addButton\"\n            type=\"button\"\n            onClick={this.openModal}\n            unitName=\"+ Add New Unit\"\n            buttonType=\"add\"\n          >\n            +&nbsp;&nbsp;Add New Unit\n          </button>\n          {this.create(unitList, isTeacher)}\n          <Modal\n            className=\"newUnitModal Expand\"\n            isOpen={modalIsOpen}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            contentLabel=\"Example Modal\"\n          >\n            <div className=\"modalTitle\">Add Survey Questions</div>\n            <div className=\"question-wrapper\">\n              {this.generateInputBox(questions)}\n              <div className=\"addButtonWrapper\">\n                <button\n                  className=\"cancelButton center\"\n                  type=\"button\"\n                  onClick={this.addNewQuestion}\n                >\n                  Add New Question\n                </button>\n              </div>\n            </div>\n            <div className=\"buttonwrapper\">\n              <button\n                type=\"button\"\n                className=\"cancelButton\"\n                onClick={this.unitChangeModal}\n                close\n              >\n                Back\n              </button>\n              <button\n                type=\"button\"\n                id=\"OK\"\n                className=\"cancelButton\"\n                onClick={() => {\n                  this.sendData();\n                  this.closeModal();\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Units;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactChartkick, { ColumnChart } from 'react-chartkick';\nimport Chart from 'chart.js';\nimport Logout from '../Logout/Logout';\nimport './Histogram.css';\n\nReactChartkick.addAdapter(Chart);\n\nexport default class Histogram extends Component {\n  static propTypes = {\n    history: PropTypes.string.isRequired,\n    match: PropTypes.string.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = { columnCharts: [], questions: [] };\n\n    this.handleGoBack = this.handleGoBack.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { unitID } = match.params;\n    fetch(`/api/questions/${unitID}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request Failed!');\n      })\n      .then(jsonResponse => {\n        const rows = [];\n        jsonResponse.forEach((e, i) => {\n          rows.push(\n            <tr>\n              <td>{i + 1}</td>\n              <td>{e.text}</td>\n            </tr>\n          );\n        });\n        const questionTable = (\n          <table className=\"legend\">\n            <tr>\n              <th>Question</th>\n              <th>Text</th>\n            </tr>\n            {rows}\n          </table>\n        );\n        this.setState({\n          questions: questionTable\n        });\n      });\n    fetch(`/api/studentSummary/${unitID}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request Failed!');\n      })\n      .then(jsonResponse => {\n        const { questions } = this.state;\n        const charts = [];\n        const xlabel = 'Question';\n        const ylabel = 'Average Star Rating';\n        jsonResponse.forEach(e => {\n          charts.push(\n            <div>\n              <h2 className=\"questionTitle\">{e.year}</h2>\n              <ColumnChart data={e.questions} xtitle={xlabel} ytitle={ylabel} />\n              <p>{questions}</p>\n            </div>\n          );\n        });\n        this.setState({ columnCharts: charts });\n      });\n  }\n\n  handleGoBack() {\n    const { history } = this.props;\n    history.goBack();\n  }\n\n  render() {\n    const { columnCharts } = this.state;\n    return (\n      <div className=\"histogram\">\n        <Logout />\n        <button type=\"button\" className=\"Return\" onClick={this.handleGoBack}>\n          &#8592; Return to Lessons\n        </button>\n        <h1 className=\"title\">Student Summary</h1>\n        {columnCharts}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport './LessonBox.css';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nclass LessonBox extends Component {\n  static propTypes = {\n    reRender: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.deleteClass = this.deleteClass.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  deleteClass() {\n    const { title, reRender } = this.props;\n    fetch(`/api/deleteLesson/${encodeURIComponent(title)}`, {\n      method: 'delete'\n    }).then(response => {\n      if (response.ok) {\n        reRender();\n        return response.json();\n      }\n      throw new Error('Request Failed');\n    });\n  }\n\n  render() {\n    const { title, color, id } = this.props;\n    const { modalIsOpen } = this.state;\n    const link = `/reflections/${id}`;\n    return (\n      <div className=\"lesson-container\">\n        <div className=\"confirmation\">\n          <Modal\n            className=\"confirm-pop-up\"\n            isOpen={modalIsOpen}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            contentLabel=\"Example Modal\"\n          >\n            <h1 className=\"confirm-message\">\n              Are you sure you want to delete this lesson?\n            </h1>\n            <h5 className=\"sub-message\">\n              Deleting this lesson will delete all information associated with\n              it.\n            </h5>\n            <div className=\"button-wrapper\">\n              <button\n                type=\"submit\"\n                className=\"cancel\"\n                onClick={this.closeModal}\n                close\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"cancel marginFix\"\n                onClick={this.deleteClass}\n              >\n                Delete\n              </button>\n            </div>\n          </Modal>\n        </div>\n        <button className=\"lesson-exit\" type=\"button\" onClick={this.openModal}>\n          &#10006;\n        </button>\n        <NavLink className=\"lessonbox\" to={link}>\n          <div className={color} />\n          <p className=\"title-p\">{title}</p>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default LessonBox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './AddLessonBox.css';\nimport plus from './plsImage.png';\n\nclass AddLessonBox extends Component {\n  render() {\n    const { onClick } = this.props;\n    return (\n      <div\n        className=\"lessonbox\"\n        onClick={onClick}\n        onKeyDown={onClick}\n        onKeyPress={onClick}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <div className=\"grey-top\" />\n        <img src={plus} className=\"plus-img\" alt=\"plus\" />\n        <p className=\"add-new\">Add new lesson</p>\n      </div>\n    );\n  }\n}\n\nAddLessonBox.propTypes = {\n  onClick: PropTypes.func.isRequired\n};\n\nexport default AddLessonBox;\n","import React, { Component } from 'react';\nimport ReactDropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport plus from '../AddLessonBox/plsImage.png';\nimport './AddLessonModal.css';\n\n/* key of the file being uploaded */\nconst key = 'sampleFile';\n\n/* styles for react drop zone */\nconst customStyles = {\n  background: '#f4f4f4',\n  width: '100%',\n  marginTop: '30px',\n  paddingBottom: '10px',\n  height: 'auto',\n  border: '3px solid #EBE9E9',\n  cursor: 'pointer'\n};\n\nconst activeStyle = {\n  background: '#EBE9E9'\n};\n\nfunction onDropRejected() {\n  alert('Upload PDFs only.');\n}\n\nclass AddLessonModal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currfile: null\n    };\n    this.okClicked = this.okClicked.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleEnterPress = this.handleEnterPress.bind(this);\n  }\n\n  onDrop = files => {\n    files.forEach(file => {\n      this.setState({\n        currfile: file\n      });\n    });\n  };\n\n  okClicked() {\n    const { handleCloseModal, updateLessons, unitID } = this.props;\n    const lessonName = document.getElementById('input-id').value;\n    if (!lessonName) {\n      alert('Please enter a lesson name.');\n    } else {\n      const { currfile } = this.state;\n      if (!currfile) {\n        alert('Please upload a file.');\n      } else {\n        const data = new FormData();\n        data.append(key, currfile);\n        data.append('unitID', unitID);\n        data.append('name', lessonName);\n        fetch('/api/upload', { method: 'POST', body: data })\n          .then(response => response.json())\n          .then(jsonResponse => {\n            const { id } = jsonResponse;\n            updateLessons(id, lessonName, 'yellow top-bar');\n          });\n      }\n      handleCloseModal();\n    }\n  }\n\n  handleEnterPress(event) {\n    if (event.charCode === 13) {\n      event.preventDefault();\n      this.okClicked(document.getElementById('classNameText'));\n    }\n  }\n\n  render() {\n    const { handleCloseModal } = this.props;\n\n    return (\n      <div className=\"lesson-modal\">\n        <div className=\"top-bar top-modal\" />\n        <form className=\"contents\">\n          <h2 className=\"bad-code\">Add New Lesson</h2>\n          <p>Lesson Name</p>\n          <input\n            type=\"text\"\n            name=\"lessonName\"\n            id=\"input-id\"\n            className=\"lesson_input\"\n            onKeyPress={this.handleEnterPress}\n          />\n          <ReactDropzone\n            style={customStyles}\n            activeStyle={activeStyle}\n            accept=\".pdf\"\n            onDrop={this.onDrop}\n            onDropRejected={onDropRejected}\n            multiple={false}\n            inputProps={{ name: key }}\n          >\n            {({ acceptedFiles }) => {\n              if (acceptedFiles.length) {\n                return <p>{acceptedFiles[0].name}</p>;\n              }\n              return (\n                <div>\n                  <img src={plus} className=\"plus-img\" alt=\"plus\" />\n                  <p className=\"insert_lesson\">Insert Lesson PDF</p>\n                  <p className=\"small_lesson\">* PDFs only</p>\n                </div>\n              );\n            }}\n          </ReactDropzone>\n          <div className=\"modal_buttons\">\n            <button\n              type=\"button\"\n              className=\"m_button\"\n              onClick={handleCloseModal}\n            >\n              Cancel\n            </button>\n            <button type=\"button\" className=\"m_button\" onClick={this.okClicked}>\n              OK\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nAddLessonModal.propTypes = {\n  handleCloseModal: PropTypes.func.isRequired,\n  updateLessons: PropTypes.func.isRequired,\n  unitID: PropTypes.number.isRequired\n};\n\nexport default AddLessonModal;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport LessonBox from './LessonBox/LessonBox';\nimport AddLessonBox from './AddLessonBox/AddLessonBox';\nimport AddLessonModal from './Modal/AddLessonModal';\nimport Logout from '../Logout/Logout';\nimport './Lessons.css';\n\nconst topBar = 'top-bar';\nconst colors = ['yellow', 'aqua', 'dark-teal'];\n\nclass Lessons extends Component {\n  static propTypes = {\n    match: PropTypes.string.isRequired,\n    history: PropTypes.string.isRequired\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      lessons: [],\n      showModal: false\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.updateLessons = this.updateLessons.bind(this);\n    this.handleGoBack = this.handleGoBack.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { unitID } = match.params;\n    fetch(`/api/lessons/${unitID}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request Failed');\n      })\n      .then(lessons => {\n        this.setState({ lessons: lessons.query });\n      });\n  }\n\n  handleGoBack() {\n    const { history } = this.props;\n    history.goBack();\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  updateLessons(lessonID, lessonName, color) {\n    const { lessons } = this.state;\n    lessons.push({ lesson_name: lessonName, color, id: lessonID });\n    this.setState({ lessons });\n  }\n\n  render() {\n    const { lessons, showModal } = this.state;\n    const { match } = this.props;\n    const { unitID } = match.params;\n    return (\n      <div className=\"lessons-container\">\n        <Logout />\n        <button\n          type=\"button\"\n          className=\"ReturnArrow moveRight\"\n          onClick={this.handleGoBack}\n        >\n          &#8592; Return to Units\n        </button>\n        <p className=\"my-lessons\">My Lessons</p>\n        <NavLink\n          to={`/studentsummary/${unitID}`}\n          className=\"student-summary-button\"\n        >\n          Student Summary\n        </NavLink>\n        <div className=\"box-container\">\n          <AddLessonBox onClick={this.handleOpenModal} />\n          {lessons.map(less => (\n            <LessonBox\n              title={less.lesson_name}\n              color={`${colors[2 - Math.floor(Math.random() * 3)]} ${topBar}`}\n              id={less.id}\n              key={less.lesson_name}\n              reRender={this.componentDidMount}\n            />\n          ))}\n        </div>\n        <Modal\n          isOpen={showModal}\n          className=\"LessonModal\"\n          overlayClassName=\"LessonOverlay\"\n        >\n          <AddLessonModal\n            handleOpenModal={this.handleOpenModal}\n            handleCloseModal={this.handleCloseModal}\n            updateLessons={this.updateLessons}\n            unitID={unitID}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Lessons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Editor } from '@tinymce/tinymce-react';\nimport './LessonReflection.css';\nimport Logout from '../Logout/Logout';\n\n/** Currently Unit ID is hardcoded to 1, should be fetched from API in future versions  */\n\nclass LessonReflection extends Component {\n  static propTypes = {\n    match: PropTypes.string,\n    history: PropTypes.string.isRequired\n  };\n\n  static defaultProps = {\n    match: {}\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      teachNotes: {}\n    };\n\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n    this.handleGoBack = this.handleGoBack.bind(this);\n    this.saveText = this.saveText.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { lessonID } = match.params;\n\n    fetch(`/api/teacherNotes/${lessonID}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request Failed');\n      })\n      .then(response => {\n        const { notes } = response;\n        this.setState({\n          teachNotes: notes,\n          url: `https://s3.us-east-2.amazonaws.com/ygnacio-lessons/${lessonID}.pdf`\n        });\n      });\n  }\n\n  handleEditorChange = event => {\n    let { teachNotes } = this.state;\n    teachNotes = event.target.getContent();\n    this.setState({ teachNotes });\n  };\n\n  handleGoBack() {\n    const { history } = this.props;\n    history.goBack();\n  }\n\n  saveText() {\n    const { teachNotes } = this.state;\n    const { match } = this.props;\n    const { lessonID } = match.params;\n    const data = new FormData();\n    data.append('notes', teachNotes);\n    fetch(`/api/update/${parseInt(lessonID, 10)}`, {\n      method: 'PUT',\n      body: data\n    });\n  }\n\n  render() {\n    const { teachNotes, url } = this.state;\n    return (\n      <div>\n        <Logout />\n        <button\n          type=\"button\"\n          className=\"ReturnArrow moveRight\"\n          onClick={this.handleGoBack}\n        >\n          &#8592; Return to Lessons\n        </button>\n        <p className=\"my-classes\">My Lesson</p>\n        <div className=\"lesson-container\">\n          <embed className=\"lesson\" src={url} type=\"application/pdf\" />\n        </div>\n        <div className=\"editor-container\">\n          <Editor\n            initialValue={teachNotes}\n            init={{\n              width: '600',\n              height: '100vh',\n              plugins: 'link image code textcolor colorpicker autosave save',\n              toolbar:\n                'undo redo | fontsizeselect | bold italic | forecolor backcolor | alignleft aligncenter alignright | code | image | save',\n              save_onsavecallback: this.saveText\n            }}\n            onChange={this.handleEditorChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LessonReflection;\n","import React, { Component } from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport Login from './components/Login/Login';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Survey from './components/Survey/Survey';\nimport Units from './components/Units/Units';\nimport Summary from './components/Histogram/Histogram';\nimport Lessons from './components/Lessons/Lessons';\nimport LessonReflection from './components/LessonReflection/LessonReflection';\n\nimport './App.css';\n\nconst hst = createBrowserHistory();\n\nclass App extends Component {\n  async componentWillMount() {\n    const status = await fetch('/api/classes', { redirect: 'follow' });\n    if (status.redirected) {\n      hst.push('/login');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={hst}>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/units/:classID\" component={Units} />\n            <Route exact path=\"/survey/:unitID\" component={Survey} />\n            <Route exact path=\"/studentsummary/:unitID\" component={Summary} />\n            <Route exact path=\"/lessons/:unitID\" component={Lessons} />\n            <Route path=\"/reflections/:lessonID\" component={LessonReflection} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/plsImage.60a1c45d.png\";","module.exports = __webpack_public_path__ + \"static/media/plusImage.60a1c45d.png\";","module.exports = __webpack_public_path__ + \"static/media/ygnacio-valley-logo.bf396bf0.jpg\";"],"sourceRoot":""}